import { Catch, ArgumentsHost, ExceptionFilter, HttpException } from '@nestjs/common';
import { TelegrafException } from 'nestjs-telegraf';
import { Context } from 'telegraf';

@Catch(TelegrafException, HttpException, Error) // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è Telegraf –∏ –¥—Ä—É–≥–∏–µ
export class TelegramExceptionFilter implements ExceptionFilter {
  async catch(exception: unknown, host: ArgumentsHost) {
    const ctx = host.switchToRpc().getContext<Context>(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegram

    console.error('Telegram Exception:', exception);

    try {
      if (ctx && ctx.chat) {
        const chatId = ctx.chat.id;

        // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ
        await ctx.telegram.sendMessage(
          chatId,
          '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üôÅ',
        );
      }
    } catch (sendError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', sendError);
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (exception instanceof HttpException) {
      console.error('HTTP Exception:', exception.getResponse());
    } else {
      console.error('Unexpected Exception:', exception);
    }
  }
}